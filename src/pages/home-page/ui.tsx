import { Container } from '@shared/ui';
import st from './styles.module.scss';

export const HomePage = () => {
  return (
    <Container className={st.home}>
      <h1>Добро пожаловать на главную страницу!</h1>
      <h2>Вот что я Вам предлагаю:</h2>
      <h3>Исследовать структуру проекта:</h3>
      <p>
        Проект организован в соответствии с методологией Feature-Sliced Design (FSD), так что,
        структуру кода можно назвать четкой и понятной)
      </p>
      <h3>Попробовать интерактивные элементы:</h3>
      <p>
        Все элементы в проекте интерактивные, и основной функционал работает. Вы можете
        взаимодействовать с интерфейсом, нажимать кнопки, дропдауны, открывать мадалки и переходить
        по страницам.
      </p>
      <h3>Посмотреть на страницы Contractors и Clients:</h3>
      <p>
        Эти страницы являются публичными и не требуют авторизации. Вы можете свободно переходить
        между ними. В этом, собственно, и их ценность - демонстрируют то что могут быть как
        защищенные роуты так и нет)
      </p>
      <h3>Внимательно повзаимодействовать с основной страницей проекта - Organization:</h3>
      <p>
        Страница Organizations является приватной. При попытке перейти на нее произойдет редирект на
        страницу авторизации. Я решил реализовать хоть и упрощенную, но аутентификацию. Использовал
        интерцепторы для отправки токена с каждым запросом к api. Попробуйте)
      </p>
      <h3>Изучить UI-kit:</h3>
      <p>
        Весь UI-kit написан с нуля, без использования готовых библиотек. Я хотел показать свой
        подход к построению подобного рода интерфейсов.
      </p>
      <h3>Посмотреть настройки сборки:</h3>
      <p>
        В проекте настроены сборка, linter и prettier чтоб обеспечить какое-нибудь качество и
        однообразие кода.
      </p>
      <h3 className={st.warn}>Примечание:</h3>
      <p>
        Разумеется, код еще можно улучшить. Как минимум, рефактооринг не помешал бы). Можно было
        подумать об адаптиве. Плюс, где-то может не доставать типизации для большей очевидности,
        где-то мог что-то упустить, возможно какие-то компоненты нужно немного переработать и т.д.
        Но поскольку с таким подходом можно провозиться и месяц, то имеем что имеем!
      </p>
    </Container>
  );
};
